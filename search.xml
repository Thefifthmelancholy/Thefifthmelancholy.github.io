<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/08/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>状态模式/有限状态机</title>
    <url>/2023/08/26/%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/</url>
    <content><![CDATA[<p>状态基类：先布置好委托，继承的子类可以通过回调函数添加事件，在Enterstate这些虚函数里面写了回调，重写的时候也要触发一下</p>
<p>1、FSMTriggerID：条件ID枚举</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    public enum <span class="title class_">FSMTriggerID</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">JumpToIdleDetection</span>,</span><br><span class="line">        <span class="title class_">MoveToIdleDetection</span>,</span><br><span class="line">        </span><br><span class="line">        <span class="title class_">IdleToMoveDetection</span>,</span><br><span class="line">        <span class="title class_">IdleToJumpDetection</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2、FSMStateID：状态ID枚举</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    public enum <span class="title class_">FSMStateID</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">Default</span>,</span><br><span class="line">        <span class="title class_">Idle</span>,</span><br><span class="line">        <span class="title class_">Run</span>,</span><br><span class="line">        <span class="title class_">Jump</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3、FSMTrigger：条件基类</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">using <span class="title class_">System</span>;</span><br><span class="line">using <span class="title class_">UnityEngine</span>;</span><br><span class="line"></span><br><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">    <span class="comment">/// 有限状态机中的条件类基类</span></span><br><span class="line">    <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">    public abstract <span class="keyword">class</span> <span class="title class_">FSMTrigger</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 条件ID</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public <span class="title class_">FSMTriggerID</span> <span class="title class_">TriggerId</span> &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">        public <span class="title class_">FSMTrigger</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">InitId</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 子类必须实现此方法来为TriggerId赋值</span></span><br><span class="line">        <span class="comment">/// 此方法由构造函数调用</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected abstract <span class="keyword">void</span> <span class="title class_">InitId</span>();</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 子类必须实现此方法来处理条件逻辑,</span></span><br><span class="line">        <span class="comment">/// 状态机通过检查所有状态的所有条件来判断需要切换至什么状态</span></span><br><span class="line">        <span class="comment">/// 检测方法内部来判断此方法</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public abstract bool <span class="title class_">HandleTrigger</span>(<span class="title class_">GameObject</span> thisGameObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4、FSMState：状态基类</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">using <span class="title class_">System</span>;</span><br><span class="line">using <span class="title class_">System</span>.<span class="property">Collections</span>.<span class="property">Generic</span>;</span><br><span class="line">using <span class="title class_">UnityEngine</span>;</span><br><span class="line"></span><br><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    public abstract <span class="keyword">class</span> <span class="title class_">FSMState</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 状态ID</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public <span class="title class_">FSMStateID</span> <span class="title class_">StateId</span> &#123; get; set; &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 条件状态映射表</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        private <span class="title class_">Dictionary</span>&lt;<span class="title class_">FSMTriggerID</span>, <span class="title class_">FSMStateID</span>&gt; _map;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 条件表</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        private <span class="title class_">List</span>&lt;<span class="title class_">FSMTrigger</span>&gt; _triggers;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 进入状态时调用的委托</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        private <span class="title class_">Action</span> enterStateHandler;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 状态中持续调用的委托</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        private <span class="title class_">Action</span> stayStateHandler;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 退出状态时调用的委托</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        private <span class="title class_">Action</span> exitStateHandler;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 当前游戏对象</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected <span class="title class_">GameObject</span> thisGameObject;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 用作初始化的构造函数</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public <span class="title class_">FSMState</span>(<span class="title class_">GameObject</span> thisGameObject)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">thisGameObject</span> = thisGameObject;</span><br><span class="line">            _map = <span class="keyword">new</span> <span class="title class_">Dictionary</span>&lt;<span class="title class_">FSMTriggerID</span>, <span class="title class_">FSMStateID</span>&gt;();</span><br><span class="line">            _triggers = <span class="keyword">new</span> <span class="title class_">List</span>&lt;<span class="title class_">FSMTrigger</span>&gt;();</span><br><span class="line">            <span class="title class_">InitState</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        protected abstract <span class="keyword">void</span> <span class="title class_">InitState</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 添加映射关系，由状态机调用</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;triggerId&quot;&gt;条件ID&lt;/param&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;stateId&quot;&gt;状态ID&lt;/param&gt;</span></span><br><span class="line">        public <span class="keyword">void</span> <span class="title class_">AddMap</span>(<span class="title class_">FSMTriggerID</span> triggerId, <span class="title class_">FSMStateID</span> stateId)</span><br><span class="line">        &#123;</span><br><span class="line">            _map.<span class="title class_">Add</span>(triggerId, stateId);</span><br><span class="line">            <span class="title class_">CreateTrigger</span>(triggerId);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 动态创建条件对象并添加到条件列表中</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;triggerId&quot;&gt;条件ID&lt;/param&gt;</span></span><br><span class="line">        private <span class="keyword">void</span> <span class="title class_">CreateTrigger</span>(<span class="title class_">FSMTriggerID</span> triggerId)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">Type</span> triggerType = <span class="title class_">Type</span>.<span class="title class_">GetType</span>(<span class="string">&quot;CharacterControlSystem.CharacterFSM.SubFSM.Trigger.&quot;</span> +triggerId+ <span class="string">&quot;Trigger&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (triggerType != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="title class_">FSMTrigger</span> trigger = <span class="title class_">Activator</span>.<span class="title class_">CreateInstance</span>(triggerType) <span class="keyword">as</span> <span class="title class_">FSMTrigger</span>; </span><br><span class="line">                _triggers.<span class="title class_">Add</span>(trigger);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 状态机通过此方法来检测是否可以切换到某个状态</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;fsmBase&quot;&gt;&lt;/param&gt;</span></span><br><span class="line">        public <span class="keyword">void</span> <span class="title class_">Reason</span>(<span class="title class_">FSMBase</span> fsmBase)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; _triggers.<span class="property">Count</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//如果发现条件满足的条件</span></span><br><span class="line">                <span class="keyword">if</span> (_triggers[i].<span class="title class_">HandleTrigger</span>(fsmBase.<span class="property">gameObject</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//返回给状态机</span></span><br><span class="line">                    fsmBase.<span class="title class_">ChangeState</span>(_map[_triggers[i].<span class="property">TriggerId</span>]);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 为进入状态委托添加回调函数</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;func&quot;&gt;&lt;/param&gt;</span></span><br><span class="line">        public <span class="keyword">void</span> <span class="title class_">AddEnterStateListener</span>(<span class="title class_">Action</span> func)</span><br><span class="line">        &#123;</span><br><span class="line">            enterStateHandler += func;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 为持续调用委托添加回调函数</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;func&quot;&gt;&lt;/param&gt;</span></span><br><span class="line">        public <span class="keyword">void</span> <span class="title class_">AddStayStateListener</span>(<span class="title class_">Action</span> func)</span><br><span class="line">        &#123;</span><br><span class="line">            stayStateHandler += func;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 为退出状态委托添加回调函数</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;func&quot;&gt;&lt;/param&gt;</span></span><br><span class="line">        public <span class="keyword">void</span> <span class="title class_">AddExitStateListener</span>(<span class="title class_">Action</span> func)</span><br><span class="line">        &#123;</span><br><span class="line">            exitStateHandler += func;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 主要用于改变角色当前状态</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public virtual <span class="keyword">void</span> <span class="title class_">EnterState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            enterStateHandler?.<span class="title class_">Invoke</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 用于角色在状态中的一些持续操作</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public virtual <span class="keyword">void</span> <span class="title class_">StayState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            stayStateHandler?.<span class="title class_">Invoke</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 主要用于退出状态时的一些操作</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public virtual <span class="keyword">void</span> <span class="title class_">ExitState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            exitStateHandler?.<span class="title class_">Invoke</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>5、FSMBase：状态机基类</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">using <span class="title class_">System</span>.<span class="property">Collections</span>.<span class="property">Generic</span>;</span><br><span class="line">using <span class="title class_">CsharpBaseModule</span>.<span class="property">PublicMono</span>;</span><br><span class="line">using <span class="title class_">UnityEngine</span>;</span><br><span class="line"></span><br><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">    <span class="comment">/// 状态机，表示一个角色所拥有的所有的状态</span></span><br><span class="line">    <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">    public abstract <span class="keyword">class</span> <span class="title class_">FSMBase</span> : <span class="title class_">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 状态列表</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected <span class="title class_">Dictionary</span>&lt;<span class="title class_">FSMStateID</span>,<span class="title class_">FSMState</span>&gt; _states;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 默认状态ID</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        [<span class="title class_">Tooltip</span>(<span class="string">&quot;请选择默认状态&quot;</span>)]</span><br><span class="line">        public <span class="title class_">FSMStateID</span> defaultStateId;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 默认状态</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected <span class="title class_">FSMState</span> _defaultState;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 当前状态</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        public <span class="title class_">FSMState</span> currentState;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 这里我将Update提到了一个公共Mono中，也可以不提</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected virtual <span class="keyword">void</span> <span class="title class_">Awake</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">ConfigFSM</span>();</span><br><span class="line">            <span class="title class_">InitDefaultState</span>();</span><br><span class="line">            <span class="title class_">MonoManager</span>.<span class="property">GetInstance</span>.<span class="title class_">AddUpdateListener</span>(<span class="title class_">BaseUpdate</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 配置状态机，基类只初始化一下就好，具体配置留给子类状态机实现</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected virtual <span class="keyword">void</span> <span class="title class_">ConfigFSM</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            _states = <span class="keyword">new</span> <span class="title class_">Dictionary</span>&lt;<span class="title class_">FSMStateID</span>, <span class="title class_">FSMState</span>&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 初始化状态，会将默认状态赋给当前状态变量</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected virtual <span class="keyword">void</span> <span class="title class_">InitDefaultState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            _defaultState = _states[defaultStateId];</span><br><span class="line">            currentState = _defaultState;</span><br><span class="line">            currentState.<span class="title class_">EnterState</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 每帧调用当前状态逻辑和检测是否满足其他状态的切换条件</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        protected virtual <span class="keyword">void</span> <span class="title class_">BaseUpdate</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            currentState.<span class="title class_">Reason</span>(<span class="variable language_">this</span>);</span><br><span class="line">            currentState.<span class="title class_">StayState</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 改变当前状态，改变之前先调用条件退出的方法，之后调用新条件进入的方法</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;stateId&quot;&gt;状态ID&lt;/param&gt;</span></span><br><span class="line">        public <span class="keyword">void</span> <span class="title class_">ChangeState</span>(<span class="title class_">FSMStateID</span> stateId)</span><br><span class="line">        &#123;</span><br><span class="line">            currentState.<span class="title class_">ExitState</span>();</span><br><span class="line">            currentState = stateId == <span class="title class_">FSMStateID</span>.<span class="property">Default</span></span><br><span class="line">                ? _defaultState</span><br><span class="line">                : _states[stateId];</span><br><span class="line">            currentState.<span class="title class_">EnterState</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 添加状态，在状态机配置中进行调用</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;stateId&quot;&gt;状态ID&lt;/param&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;state&quot;&gt;状态，配置时new一个&lt;/param&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class="line">        protected <span class="title class_">FSMState</span> <span class="title class_">AddState</span>(<span class="title class_">FSMStateID</span> stateId, <span class="title class_">FSMState</span> state)</span><br><span class="line">        &#123;</span><br><span class="line">            _states.<span class="title class_">Add</span>(stateId, state);</span><br><span class="line">            <span class="keyword">return</span> state;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/// &lt;summary&gt;</span></span><br><span class="line">        <span class="comment">/// 寻找相应的状态</span></span><br><span class="line">        <span class="comment">/// &lt;/summary&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;param name=&quot;stateId&quot;&gt;状态ID&lt;/param&gt;</span></span><br><span class="line">        <span class="comment">/// &lt;returns&gt;&lt;/returns&gt;</span></span><br><span class="line">        protected <span class="title class_">FSMState</span> <span class="title class_">FindState</span>(<span class="title class_">FSMStateID</span> stateId)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (_states.<span class="title class_">ContainsKey</span>(stateId))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> _states[stateId];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>案例</p>
<p>总结：</p>
<p>1、添加好状态枚举和条件枚举</p>
<p>2、条件需要添加好InitId和<code>HandleTrigger</code></p>
<p>3、状态需要添加好InitId和<code>AddMap</code>转化</p>
<ol>
<li><strong>定义FSMTriggerID和FSMStateID枚举：</strong></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">public enum <span class="title class_">PlayerFSMTriggerID</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">Walk</span>,</span><br><span class="line">    <span class="title class_">Run</span>,</span><br><span class="line">    <span class="title class_">Stop</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public enum <span class="title class_">PlayerFSMStateID</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title class_">Idle</span>,</span><br><span class="line">    <span class="title class_">Walking</span>,</span><br><span class="line">    <span class="title class_">Running</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>实现FSM触发器：</strong></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span>.<span class="property">SubFSM</span>.<span class="property">Trigger</span></span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">WalkTrigger</span> : <span class="title class_">FSMTrigger</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">InitId</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">TriggerId</span> = <span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Walk</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public override bool <span class="title class_">HandleTrigger</span>(<span class="title class_">GameObject</span> thisGameObject)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 实现检查行走条件是否满足的逻辑</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Input</span>.<span class="title class_">GetKey</span>(<span class="title class_">KeyCode</span>.<span class="property">W</span>); <span class="comment">// 例如，按下W键触发行走</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">RunTrigger</span> : <span class="title class_">FSMTrigger</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">InitId</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">TriggerId</span> = <span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Run</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public override bool <span class="title class_">HandleTrigger</span>(<span class="title class_">GameObject</span> thisGameObject)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 实现检查奔跑条件是否满足的逻辑</span></span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Input</span>.<span class="title class_">GetKey</span>(<span class="title class_">KeyCode</span>.<span class="property">LeftShift</span>); <span class="comment">// 例如，按住Shift键触发奔跑</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">StopTrigger</span> : <span class="title class_">FSMTrigger</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">InitId</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">TriggerId</span> = <span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Stop</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public override bool <span class="title class_">HandleTrigger</span>(<span class="title class_">GameObject</span> thisGameObject)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 实现检查停止条件是否满足的逻辑</span></span><br><span class="line">            <span class="keyword">return</span> !<span class="title class_">Input</span>.<span class="title class_">GetKey</span>(<span class="title class_">KeyCode</span>.<span class="property">W</span>) &amp;&amp; !<span class="title class_">Input</span>.<span class="title class_">GetKey</span>(<span class="title class_">KeyCode</span>.<span class="property">LeftShift</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>实现FSM状态：</strong></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span>.<span class="property">SubFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">IdleState</span> : <span class="title class_">FSMState</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">InitState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">StateId</span> = <span class="title class_">PlayerFSMStateID</span>.<span class="property">Idle</span>;</span><br><span class="line">            <span class="comment">// 添加转换</span></span><br><span class="line">            <span class="title class_">AddMap</span>(<span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Walk</span>, <span class="title class_">PlayerFSMStateID</span>.<span class="property">Walking</span>);</span><br><span class="line">            <span class="title class_">AddMap</span>(<span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Run</span>, <span class="title class_">PlayerFSMStateID</span>.<span class="property">Running</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">WalkingState</span> : <span class="title class_">FSMState</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">InitState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">StateId</span> = <span class="title class_">PlayerFSMStateID</span>.<span class="property">Walking</span>;</span><br><span class="line">            <span class="comment">// 添加转换</span></span><br><span class="line">            <span class="title class_">AddMap</span>(<span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Run</span>, <span class="title class_">PlayerFSMStateID</span>.<span class="property">Running</span>);</span><br><span class="line">            <span class="title class_">AddMap</span>(<span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Stop</span>, <span class="title class_">PlayerFSMStateID</span>.<span class="property">Idle</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">RunningState</span> : <span class="title class_">FSMState</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">InitState</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="title class_">StateId</span> = <span class="title class_">PlayerFSMStateID</span>.<span class="property">Running</span>;</span><br><span class="line">            <span class="comment">// 添加转换</span></span><br><span class="line">            <span class="title class_">AddMap</span>(<span class="title class_">PlayerFSMTriggerID</span>.<span class="property">Stop</span>, <span class="title class_">PlayerFSMStateID</span>.<span class="property">Idle</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li><strong>实现PlayerFSM：</strong></li>
</ol>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">namespace <span class="title class_">CharacterControlSystem</span>.<span class="property">CharacterFSM</span></span><br><span class="line">&#123;</span><br><span class="line">    public <span class="keyword">class</span> <span class="title class_">PlayerFSM</span> : <span class="title class_">FSMBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        protected override <span class="keyword">void</span> <span class="title class_">ConfigFSM</span>()</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 创建状态</span></span><br><span class="line">            <span class="keyword">var</span> idleState = <span class="title class_">AddState</span>(<span class="title class_">PlayerFSMStateID</span>.<span class="property">Idle</span>, <span class="keyword">new</span> <span class="title class_">IdleState</span>());</span><br><span class="line">            <span class="keyword">var</span> walkingState = <span class="title class_">AddState</span>(<span class="title class_">PlayerFSMStateID</span>.<span class="property">Walking</span>, <span class="keyword">new</span> <span class="title class_">WalkingState</span>());</span><br><span class="line">            <span class="keyword">var</span> runningState = <span class="title class_">AddState</span>(<span class="title class_">PlayerFSMStateID</span>.<span class="property">Running</span>, <span class="keyword">new</span> <span class="title class_">RunningState</span>());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置默认状态</span></span><br><span class="line">            defaultStateId = <span class="title class_">PlayerFSMStateID</span>.<span class="property">Idle</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
